# Sefirot ChromaDB Intelligence Platform - Conda Environment Configuration
# Version: V2.0 Production Ready
# Compatible with: conda/mamba package managers
# Target platforms: macOS (Intel/Apple Silicon), Linux, Windows WSL2, Android/Termux

name: sefirot-v2
channels:
  - conda-forge
  - pytorch
  - nvidia  # For CUDA support where available
  - huggingface

dependencies:
  # Python runtime
  - python=3.11
  
  # Core vector database and AI components
  - chromadb>=0.4.0
  - sentence-transformers>=2.2.0
  - transformers>=4.30.0
  - torch>=2.0.0
  - torchvision>=0.15.0
  - torchaudio>=2.0.0
  - numpy>=1.24.0
  - pandas>=2.0.0
  - scikit-learn>=1.3.0
  - faiss-cpu>=1.7.4  # Use faiss-gpu for CUDA systems
  
  # Document processing and NLP
  - spacy>=3.6.0
  - nltk>=3.8.0
  - gensim>=4.3.0
  - beautifulsoup4>=4.12.0
  - lxml>=4.9.0
  - markdown>=3.4.0
  - pypdf>=3.0.0
  - python-docx>=0.8.11
  - pillow>=10.0.0
  - pytesseract>=0.3.10
  
  # Graph analysis for Obsidian integration
  - networkx>=3.1.0
  - python-igraph>=0.10.0
  - graph-tool  # Optional for advanced graph analytics
  
  # System monitoring and hardware profiling
  - psutil>=5.9.0
  - py-cpuinfo>=9.0.0
  
  # Data handling and storage
  - sqlalchemy>=2.0.0
  - aiosqlite>=0.19.0
  - pydantic>=2.0.0
  
  # Web services and API integration
  - requests>=2.31.0
  - aiohttp>=3.8.0
  - fastapi>=0.100.0
  - uvicorn>=0.23.0
  
  # Configuration and settings management
  - pyyaml>=6.0.0
  - toml>=0.10.2
  - click>=8.1.0
  
  # Development and testing
  - pytest>=7.4.0
  - black>=23.0.0
  - flake8>=6.0.0
  - mypy>=1.5.0
  
  # Progress monitoring and logging
  - tqdm>=4.65.0
  - rich>=13.4.0
  - loguru>=0.7.0
  
  # System utilities
  - curl
  - wget
  - jq
  - ripgrep
  - fd-find
  - parallel
  
  # Optional: GPU acceleration (uncomment for CUDA systems)
  # - cudatoolkit>=11.8
  # - faiss-gpu>=1.7.4
  
  # Optional: Enhanced document processing
  - tesseract>=5.3.0
  - poppler>=23.0.0
  - imagemagick>=7.1.0
  - pandoc>=3.1.0
  
  # Python-only packages (via pip)
  - pip
  - pip:
    # Specialized AI/ML packages not in conda-forge
    - docling>=1.0.0  # IBM's document processing
    - openai>=1.0.0
    - anthropic>=0.25.0
    - pinecone-client>=3.0.0
    
    # Privacy and security
    - cryptography>=41.0.0
    - keyring>=24.0.0
    
    # Enhanced terminal interface
    - typer>=0.9.0
    - inquirer>=3.1.0
    
    # Termux/Android compatibility
    - psutil-extra  # Enhanced mobile hardware detection
    
    # Performance profiling
    - memory-profiler>=0.61.0
    - line-profiler>=4.0.0
    
    # Optional: Cloud services integration
    # - boto3>=1.28.0  # AWS
    # - google-cloud-storage>=2.10.0  # GCP
    # - azure-storage-blob>=12.17.0  # Azure
    
# Environment variables for hardware optimization
variables:
  # Performance tuning
  OMP_NUM_THREADS: "auto"
  TOKENIZERS_PARALLELISM: "false"
  CHROMADB_TELEMETRY: "false"
  
  # Memory management
  CHROMADB_BATCH_SIZE: "500"
  MAX_MEMORY_GB: "auto"
  
  # Mobile/Termux optimizations
  TERMUX_OPTIMIZED: "auto"
  MOBILE_BATCH_SIZE: "100"
  
  # Privacy settings
  PRIVACY_MODE: "strict"
  TELEMETRY_DISABLED: "true"

# Platform-specific configurations
platform_overrides:
  # macOS Apple Silicon optimizations
  darwin_arm64:
    - pytorch::pytorch-mps  # Metal Performance Shaders
    
  # Linux x86_64 with CUDA
  linux_x86_64:
    - pytorch::pytorch-cuda=11.8
    - nvidia::cudatoolkit=11.8
    - conda-forge::faiss-gpu
    
  # Android/Termux (via conda-mobile)
  android:
    - conda-mobile::python-mobile
    - conda-mobile::numpy-mobile
    - termux::termux-api

# Installation validation script
validation:
  commands:
    - python -c "import chromadb; print('ChromaDB:', chromadb.__version__)"
    - python -c "import sentence_transformers; print('SentenceTransformers:', sentence_transformers.__version__)"
    - python -c "import transformers; print('Transformers:', transformers.__version__)"
    - python -c "import spacy; print('spaCy:', spacy.__version__)"
    - python -c "import torch; print('PyTorch:', torch.__version__, 'CUDA:', torch.cuda.is_available())"
    - python -c "import sys; print('Python:', sys.version.split()[0], 'Platform:', sys.platform)"

# Quick start commands post-installation
quick_start:
  setup_commands:
    - python -m spacy download en_core_web_sm
    - python -c "import nltk; nltk.download('punkt'); nltk.download('vader_lexicon')"
    - mkdir -p ~/.sefirot/{chromadb,configs,logs,vault}
    
  verification:
    - sefirot doctor  # System health check
    - sefirot test-environment  # Validate all components
    - sefirot hardware-profile  # Generate hardware optimization profile

# Development environments
dev_environments:
  # Minimal testing environment
  testing:
    include: [python, pytest, chromadb, sentence-transformers]
    
  # Full development environment  
  development:
    include: all
    additional: [jupyter, ipython, matplotlib, seaborn]
    
  # Production deployment
  production:
    exclude: [pytest, black, flake8, mypy, jupyter]
    optimized: true

# Cloud deployment configurations
cloud_ready:
  docker_base: "condaforge/mambaforge:latest"
  size_optimized: true
  cache_layers: true
  multi_arch: [linux/amd64, linux/arm64]

# Termux/Android specific optimizations
termux_config:
  packages:
    - termux-api
    - termux-tools
    - openssh
    - git
  
  environment_adjustments:
    - export TMPDIR="$PREFIX/tmp"
    - export TERMUX_PKG_CONFIG_LIBDIR="$PREFIX/lib/pkgconfig"
    - ulimit -n 8192  # Increase file descriptor limit
  
  performance_tweaks:
    batch_size: 50
    memory_limit: "1GB"
    concurrent_workers: 2

# Future compatibility notes
compatibility_notes: |
  V2.0+ Migration Path:
  1. Current v0 users can transition using: `conda env create -f environment.yml`
  2. Backwards compatibility maintained for existing Nix users
  3. Android/Termux support requires conda-mobile or mamba-mobile
  4. Cloud deployments benefit from containerized approach
  5. V3.0+ will introduce distributed processing capabilities

# Version history
version_history:
  v1.78.8: "Nix-based development environment"
  v2.0.0: "Conda/mamba transition with enhanced mobile support" 
  v2.1.0: "Planned - distributed processing capabilities"
  v3.0.0: "Roadmap - full cloud-native architecture"